Software engineering: Canopy [[makes it easier to understand the connections between subcomponents of a system]], to [[find reasons for the properties of the system]].

Makes it easier to understand the connections between subcomponents of a system: There are often facts about a system as a whole that don't really belong in the comments for any one class or component, but if they would be put in a big pile then no one would be able to find anything in it, so Canopy creates a new place to put system-wide information, and makes it easier to start from the documentation of one component and navigate organically to new facts about the system as a whole.

Find reasons for the properties of the system: It can be difficult to figure out what business requirement or engineering constraint caused a particular piece of code to be written, but Canopy can document the original user stories and the history of engineering decisions all in one place, allowing maintainers to navigate from a given code component to an explanation of why it is that way.

One of the challenges of code documentation is that there is often no good place to put information about the system as a whole where it will for sure be seen without becoming too long for people to read, or for explaining how a certain piece of the system fits into the system as a whole, but Canopy excels at expressing information about a domain at a high-level and letting users burrow into the details, or starting from a part and zooming out to see its role in the big picture.
