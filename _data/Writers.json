{
 "displayTopicName": "Writers",
 "paragraphsBySubtopic": {
  "Writers": [
   {
    "text": "Writers use Canopy by ",
    "type": "text"
   },
   {
    "text": "creating a Canopy project",
    "type": "local",
    "targetSubtopic": "Creating a Canopy project",
    "targetTopic": "Writers",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Writers"
   },
   {
    "text": ", ",
    "type": "text"
   },
   {
    "text": "adding content to their project",
    "type": "local",
    "targetSubtopic": "Adding content to their project",
    "targetTopic": "Writers",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Writers"
   },
   {
    "text": " that follows ",
    "type": "text"
   },
   {
    "text": "best practices",
    "type": "global",
    "targetSubtopic": "Best practices",
    "targetTopic": "Best practices",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Writers"
   },
   {
    "text": ", ",
    "type": "text"
   },
   {
    "text": "serving their project locally",
    "type": "local",
    "targetSubtopic": "Serving their project locally",
    "targetTopic": "Writers",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Writers"
   },
   {
    "text": " and ",
    "type": "text"
   },
   {
    "text": "deploying the project",
    "type": "local",
    "targetSubtopic": "Deploying the project",
    "targetTopic": "Writers",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Writers"
   },
   {
    "text": ".",
    "type": "text"
   }
  ],
  "Creating a Canopy project": [
   {
    "text": "Creating a Canopy project involves ",
    "type": "text"
   },
   {
    "text": "creating a project directory",
    "type": "local",
    "targetSubtopic": "Creating a project directory",
    "targetTopic": "Writers",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Creating a Canopy project"
   },
   {
    "text": ", ",
    "type": "text"
   },
   {
    "text": "initializing the project",
    "type": "local",
    "targetSubtopic": "Initializing the project",
    "targetTopic": "Writers",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Creating a Canopy project"
   },
   {
    "text": ", and optionally ",
    "type": "text"
   },
   {
    "text": "initializing version control",
    "type": "local",
    "targetSubtopic": "Initializing version control",
    "targetTopic": "Writers",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Creating a Canopy project"
   },
   {
    "text": ".",
    "type": "text"
   }
  ],
  "Creating a project directory": [
   {
    "text": "Creating the project directory is done by creating a directory, eg running `mkdir my_project` on a Unix-like system. There is nothing special about the type of directory.",
    "type": "text"
   }
  ],
  "Initializing the project": [
   {
    "text": "To initialize a project, enter the project directory (`cd` on a Unix system), then run `canopy init`. The ",
    "type": "text"
   },
   {
    "text": "Canopy CLI init command",
    "type": "global",
    "targetSubtopic": "Canopy CLI init command",
    "targetTopic": "Canopy CLI init command",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Initializing the project"
   },
   {
    "text": " creates various files and folders that are necessary for your Canopy project. Initializing the project entails selecting a ",
    "type": "text"
   },
   {
    "text": "default topic",
    "type": "global",
    "targetSubtopic": "Default Topic",
    "targetTopic": "Default Topic",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Initializing the project"
   },
   {
    "text": ".",
    "type": "text"
   }
  ],
  "Initializing version control": [
   {
    "text": "At this point you might want to run a `git init` in your project directory and store your project on a service like Github. Storing your project on a hosting service like Github makes it easier to host and deploy your project when it changes.",
    "type": "text"
   }
  ],
  "Adding content to their project": [
   {
    "text": "Content is added to a Canopy project by creating files that follow the ",
    "type": "text"
   },
   {
    "text": "Canopy data model",
    "type": "global",
    "targetSubtopic": "Canopy Data Model",
    "targetTopic": "Canopy Data Model",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Adding content to their project"
   },
   {
    "text": " and using ",
    "type": "text"
   },
   {
    "text": "Canopy markup",
    "type": "local",
    "targetSubtopic": "Canopy markup",
    "targetTopic": "Writers",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Adding content to their project"
   },
   {
    "text": ". There are several ",
    "type": "text"
   },
   {
    "text": "methods of producing content",
    "type": "local",
    "targetSubtopic": "Methods of producing content",
    "targetTopic": "Writers",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Adding content to their project"
   },
   {
    "text": ". Authors can follow ",
    "type": "text"
   },
   {
    "text": "best practices",
    "type": "global",
    "targetSubtopic": "Best practices",
    "targetTopic": "Best practices",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Adding content to their project"
   },
   {
    "text": " in deciding how to model their ideas in the Canopy data model.",
    "type": "text"
   }
  ],
  "Methods of producing content": [
   {
    "text": "Content can be produced by ",
    "type": "text"
   },
   {
    "text": "manually creating topic files",
    "type": "local",
    "targetSubtopic": "Manually creating topic files",
    "targetTopic": "Writers",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Methods of producing content"
   },
   {
    "text": ", or using the ",
    "type": "text"
   },
   {
    "text": "Canopy CLI bulk command",
    "type": "global",
    "targetSubtopic": "Canopy CLI bulk command",
    "targetTopic": "Canopy CLI bulk command",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Methods of producing content"
   },
   {
    "text": ".",
    "type": "text"
   }
  ],
  "Manually creating topic files": [
   {
    "text": "If you create a file in your `topics` directory like `project/topics/category/topic.expl`, and you add a root paragraph to the file like this: ",
    "type": "text"
   },
   {
    "text": "` ",
    "type": "text"
   },
   {
    "text": "` Topic: This is a paragraph for the topic \"Topic.\" ",
    "type": "text"
   },
   {
    "text": "` ",
    "type": "text"
   },
   {
    "text": "Then, when you build your project, this topic can be viewed in the web interface.",
    "type": "text"
   }
  ],
  "Canopy markup": [
   {
    "text": "Typical markdown-style styling is available, such as lists, code blocks, tables, footnotes, block quotes, and styling characters. Inline HTML is supported. Asterisks indicate bold and underscores indicate italics.",
    "type": "text"
   }
  ],
  "Building the project": [
   {
    "text": "Building your Canopy project entails taking the `expl` files and generating JSON from them that can be used by the front-end client. You can build your project by navigating to your project directory and running the ",
    "type": "text"
   },
   {
    "text": "Canopy CLI build command",
    "type": "global",
    "targetSubtopic": "Canopy CLI build command",
    "targetTopic": "Canopy CLI build command",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Building the project"
   },
   {
    "text": ".",
    "type": "text"
   }
  ],
  "Serving their project locally": [
   {
    "text": "To serve your Canopy project locally, navigate to your project folder and running the ",
    "type": "text"
   },
   {
    "text": "Canopy CLI serve command",
    "type": "global",
    "targetSubtopic": "Canopy CLI serve command",
    "targetTopic": "Canopy CLI serve command",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Serving their project locally"
   },
   {
    "text": ".",
    "type": "text"
   }
  ],
  "Deploying the project": [
   {
    "text": "There are various ways of deploying a Canopy project to an external hosting provider. Canopy's use of ",
    "type": "text"
   },
   {
    "text": "cosmetic paths",
    "type": "local",
    "targetSubtopic": "Cosmetic paths",
    "targetTopic": "Writers",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Deploying the project"
   },
   {
    "text": " prevents it from being hosted on a simple static assets server, however, there are several ways of overcoming this limitation and ",
    "type": "text"
   },
   {
    "text": "hosting a Canopy project",
    "type": "local",
    "targetSubtopic": "Hosting a Canopy project",
    "targetTopic": "Writers",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Deploying the project"
   },
   {
    "text": ", and there are resources for ",
    "type": "text"
   },
   {
    "text": "continuously building a Canopy project",
    "type": "local",
    "targetSubtopic": "Continuously building a Canopy project",
    "targetTopic": "Writers",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Deploying the project"
   },
   {
    "text": ".",
    "type": "text"
   }
  ],
  "Cosmetic paths": [
   {
    "text": "When reading a Canopy website, the URL adapts to reflect the path of topics and subtopics that the reader has navigated through. The URL of the page might for example read `www.example.com/Topic_1/Topic_2`. However, if the site is hosted on a static assets server, the client will request a directory `Topic_1` that contains a directory `Topic_2`, neither of which exists, when really we just want to serve the root `index.html` asset regardless of the requested path.",
    "type": "text"
   }
  ],
  "Hosting a Canopy project": [
   {
    "text": "In order to get around the problem of cosmetic paths, there are four ways of hosting a Canopy project, ",
    "type": "text"
   },
   {
    "text": "dynamic server",
    "type": "local",
    "targetSubtopic": "Dynamic server",
    "targetTopic": "Writers",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Hosting a Canopy project"
   },
   {
    "text": ", ",
    "type": "text"
   },
   {
    "text": "hash URLs",
    "type": "local",
    "targetSubtopic": "Hash URLs",
    "targetTopic": "Writers",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Hosting a Canopy project"
   },
   {
    "text": ", ",
    "type": "text"
   },
   {
    "text": "symlinks",
    "type": "local",
    "targetSubtopic": "Symlinks",
    "targetTopic": "Writers",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Hosting a Canopy project"
   },
   {
    "text": ", or a ",
    "type": "text"
   },
   {
    "text": "custom static hosting provider",
    "type": "local",
    "targetSubtopic": "Custom static hosting provider",
    "targetTopic": "Writers",
    "enclosingTopic": "Writers",
    "enclosingSubtopic": "Hosting a Canopy project"
   },
   {
    "text": ".",
    "type": "text"
   }
  ],
  "Dynamic server": [
   {
    "text": "The simplest way of avoiding the problem of cosmetic paths is to not use a static assets server. The Canopy CLI ships with a dynamic Express server that will ignore request paths and serve the root `index.html` file for all requests. The downside of this option is that dynamic hosting is often more expensive than static assets hosting.",
    "type": "text"
   }
  ],
  "Hash URLs": [
   {
    "text": "Canopy has a build option called \"hash URLs\" that causes the project to prepend all paths with `/#/`, making it irrelevant to the server what comes after the hash symbol. The downside of this approach is that it adds an extra character to all URLs.",
    "type": "text"
   }
  ],
  "Symlinks": [
   {
    "text": "Symlinks is build option that creates directories for every topic in the project and symlinks to every other topic directory, each of which contains the same `index.html` asset, so requests like `www.example.com/Topic_A/Topic_B` follow a valid directory path via the symlinks. The downside of this approach is that most hosting providers do not permit symlinks, and creating the directories and linking them is an O(N",
    "type": "text"
   },
   {
    "type": "html_element",
    "html": "<sup>2</sup>"
   },
   {
    "text": ") operation at build-time.",
    "type": "text"
   }
  ],
  "Custom static hosting provider": [
   {
    "text": "Some static asset hosting providers allow the webmaster to specify a redirect when a user requests a non-existent resource. This is the recommended option, and an example of this set up can be found in the ",
    "type": "text"
   },
   {
    "type": "url",
    "text": "Canopy Github's \"example workflows\" repo",
    "url": "https://github.com/canopy-js/example-workflows"
   },
   {
    "text": ".",
    "type": "text"
   }
  ],
  "Continuously building a Canopy project": [
   {
    "text": "You might want to store your Canopy project on Github and trigger builds whenever an `expl` file is changed. Template Github workflows for continuously building a Canopy project hosted in a Github repository can be found on the ",
    "type": "text"
   },
   {
    "type": "url",
    "text": "Canopy Github's \"example workflows\" repo",
    "url": "https://github.com/canopy-js/example-workflows"
   },
   {
    "text": ".",
    "type": "text"
   }
  ]
 }
}